{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "onLoad",
    "clickEventHandler",
    "EventHandler",
    "target",
    "node",
    "component",
    "handler",
    "customEventData",
    "button",
    "getComponent",
    "Button",
    "clickEvents",
    "push",
    "callback",
    "event"
  ],
  "mappings": ";;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVQ,KAHP;;AAgBL;AACAC,YAAQ,kBAAY;AAChB,YAAIC,oBAAoB,IAAIN,GAAGG,SAAH,CAAaI,YAAjB,EAAxB;AACAD,0BAAkBE,MAAlB,GAA2B,KAAKC,IAAhC,CAFgB,CAEsB;AACtCH,0BAAkBI,SAAlB,GAA8B,aAA9B,CAHgB,CAG4B;AAC5CJ,0BAAkBK,OAAlB,GAA4B,UAA5B;AACAL,0BAAkBM,eAAlB,GAAoC,QAApC;;AAEA,YAAIC,SAASJ,KAAKK,YAAL,CAAkBd,GAAGe,MAArB,CAAb;AACAF,eAAOG,WAAP,CAAmBC,IAAnB,CAAwBX,iBAAxB;AAEH,KA3BI;;AA6BLY,cAAU,kBAAUC,KAAV,EAAiBP,eAAjB,EAAkC;AACxC;AACA,YAAIH,OAAOU,MAAMX,MAAjB;AACA,YAAIK,SAASJ,KAAKK,YAAL,CAAkBd,GAAGe,MAArB,CAAb;AACA;AACH;;AAED;AACA;;AAEA;AAvCK,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        var clickEventHandler = new cc.Component.EventHandler();\r\n        clickEventHandler.target = this.node; //这个 node 节点是你的事件处理代码组件所属的节点\r\n        clickEventHandler.component = \"MyComponent\";//这个是代码文件名\r\n        clickEventHandler.handler = \"callback\";\r\n        clickEventHandler.customEventData = \"foobar\";\r\n\r\n        var button = node.getComponent(cc.Button);\r\n        button.clickEvents.push(clickEventHandler);\r\n\r\n    },\r\n    \r\n    callback: function (event, customEventData) {\r\n        //这里 event 是一个 Touch Event 对象，你可以通过 event.target 取到事件的发送节点\r\n        var node = event.target;\r\n        var button = node.getComponent(cc.Button);\r\n        //这里的 customEventData 参数就等于你之前设置的 \"foobar\"\r\n    }\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}